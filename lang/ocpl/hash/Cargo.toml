[package]
name = "solana-hash"
version.workspace = true
authors.workspace = true
repository.workspace = true
homepage.workspace = true
license.workspace = true
edition.workspace = true

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg=docsrs"]
targets = [
    "x86_64-unknown-linux-gnu",
    "wasm32-unknown-unknown",
]

[lib]
name = "solana_hash"
path = "src/lib.rs"

[dependencies]
borsh = { workspace = true, optional = true }
bs58 = { workspace = true, default-features = false }
bytemuck = { workspace = true, optional = true }
bytemuck_derive = { workspace = true, optional = true }
serde = { workspace = true, optional = true }
serde_derive = { workspace = true, optional = true }
solana-atomic-u64 = { workspace = true }
solana-frozen-abi = { workspace = true, optional = true, features = [
    "frozen-abi",
] }
solana-frozen-abi-macro = { workspace = true, optional = true, features = [
    "frozen-abi",
] }
solana-sanitize = { workspace = true }

[dev-dependencies]

[features]
borsh = [
    "dep:borsh",
    "std",
]
bytemuck = [
    "dep:bytemuck",
    "dep:bytemuck_derive",
]
default = ["std"]
dev-context-only-utils = ["bs58/alloc"]
frozen-abi = [
    "dep:solana-frozen-abi",
    "dep:solana-frozen-abi-macro",
    "std",
]
serde = [
    "dep:serde",
    "dep:serde_derive",
]
std = []

[target.'cfg(target_arch = "wasm32")'.dependencies]
js-sys = { workspace = true }
wasm-bindgen = { workspace = true }

[lints.rust.unexpected_cfgs]
level = "warn"
priority = 0
check-cfg = [
    'cfg(target_os, values("solana"))',
    'cfg(feature, values("frozen-abi", "no-entrypoint"))',
]
